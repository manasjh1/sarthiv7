name: Deploy to AWS EC2

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Add EC2 host to known-hosts
        run: |
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          REPO: ${{ github.repository }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          ssh "${USER}@${HOST}" << 'EOF'
            set -e

            # Prepare deployment folder
            sudo mkdir -p /opt/sarthi
            sudo chown -R $USER:$USER /opt/sarthi
            cd /opt/sarthi

            # Stop running service
            sudo systemctl stop sarthi || true

            # Backup previous release
            if [ -d "current" ]; then
              mv current "backup_$(date +%Y%m%d_%H%M%S)"
            fi

            # Clone repo using SSH (since we added the SSH key)
            git clone --depth 1 git@github.com:${{ github.repository }}.git current
            cd current

            # Set up virtual environment
            python3.12 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            # Write .env file with secrets
            cat > .env << ENVEOF
DATABASE_URL=${{ secrets.DATABASE_URL }}
JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=1
OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}
PINECONE_INDEX=${{ secrets.PINECONE_INDEX }}
PINECONE_NAMESPACE=distress
OPENAI_EMBED_MODEL=text-embedding-3-large
ZEPTOMAIL_TOKEN=${{ secrets.ZEPTOMAIL_TOKEN }}
ZEPTOMAIL_FROM_DOMAIN=noreply@${{ secrets.DOMAIN_NAME }}
ZEPTOMAIL_FROM_NAME=Sarthi
WHATSAPP_ACCESS_TOKEN=${{ secrets.WHATSAPP_ACCESS_TOKEN }}
WHATSAPP_PHONE_NUMBER_ID=${{ secrets.WHATSAPP_PHONE_NUMBER_ID }}
WHATSAPP_TEMPLATE_NAME=authentication
ENVEOF

            chmod 600 .env
            sudo chown -R ubuntu:ubuntu /opt/sarthi/current

            # Smoke test
            source venv/bin/activate
            python -c "from app.main import app; print('✅ App loads successfully')"
          EOF

      - name: Start Sarthi service
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            sudo systemctl start sarthi
            sleep 5
            sudo systemctl status sarthi --no-pager
          EOF

      - name: Health check
        run: |
          sleep 10
          curl -f "http://${{ secrets.EC2_HOST }}/health"
          echo "✅ Deployment successful"
